
services:

  mongodb:
    image: mongo:latest
    ports:
      - 27017:${MONGODB_INSTANCE_PORT}
    networks:
      - eureka-network
    environment:
      - GLIBC_TUNABLES=glibc.pthread.rseq=0
    volumes:
      - mongodb_data:/data/db
    command: --wiredTigerCacheSizeGB 1
    ulimits:
      memlock: -1
    deploy:
      resources:
        limits:
          memory: 1G
    healthcheck:
      test: mongosh --eval 'db.runCommand("ping").ok' localhost:${MONGODB_INSTANCE_PORT}/test --quiet
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

  user-microservice:
    build:
      context: ../../../../../../../user-microservice
    ports:
      - 8084:${USER_INSTANCE_PORT}
    networks:
      - eureka-network
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
      - EUREKA_HOST=${EUREKA_INSTANCE_HOSTNAME}
      - EUREKA_PORT=${EUREKA_INSTANCE_PORT}
      - SERVICE_NAME=${USER_INSTANCE_HOSTNAME}
      - SERVICE_PORT=${USER_INSTANCE_PORT}
      - ADAPTER_RIDE_PORT=${USER_ADAPTER_RIDE_PORT}
      - MONGO_CONNECTION=${MONGODB_CONNECTION_STRING}
      - MONGO_DATABSE=${USER_MONGODB_DATABASE}
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:${USER_INSTANCE_PORT}/health", "curl -f http://localhost:${USER_ADAPTER_RIDE_PORT}/health" ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

networks:
  eureka-network:
    driver: bridge

volumes:
  mongodb_data: